.Dd April 7, 2014
.Dt libsigscan 3
.Os libsigscan
.Sh NAME
.Nm libsigscan.h
.Nd Library to access the executable (EXE) format
.Sh LIBRARY
.Lb libsigscan
.Sh SYNOPSIS
.In libsigscan.h
.Pp
Support functions
.Ft const char *
.Fn libsigscan_get_version "void"
.Ft int
.Fn libsigscan_get_access_flags_read
.Ft int
.Fn libsigscan_get_codepage "int *codepage, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_set_codepage "int codepage, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_check_file_signature "const char *filename, libsigscan_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libsigscan_check_file_signature_wide "const wchar_t *filename, libsigscan_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libsigscan_check_file_signature_file_io_handle "libbfio_handle_t *file_io_handle, libsigscan_error_t **error"
.Pp
Notify functions
.Ft void
.Fn libsigscan_notify_set_verbose "int verbose"
.Ft int
.Fn libsigscan_notify_set_stream "FILE *stream, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_notify_stream_open "const char *filename, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_notify_stream_close "libsigscan_error_t **error"
.Pp
Error functions
.Ft void 
.Fn libsigscan_error_free "libsigscan_error_t **error"
.Ft int
.Fn libsigscan_error_fprint "libsigscan_error_t *error, FILE *stream"
.Ft int
.Fn libsigscan_error_sprint "libsigscan_error_t *error, char *string, size_t size"
.Ft int 
.Fn libsigscan_error_backtrace_fprint "libsigscan_error_t *error, FILE *stream"
.Ft int
.Fn libsigscan_error_backtrace_sprint "libsigscan_error_t *error, char *string, size_t size"
.Pp
File functions
.Ft int
.Fn libsigscan_file_initialize "libsigscan_file_t **file, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_free "libsigscan_file_t **file, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_open "libsigscan_file_t *file, const char *filename, int access_flags, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_close "libsigscan_file_t *file, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_get_ascii_codepage "libsigscan_file_t *file, int *ascii_codepage, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_set_ascii_codepage "libsigscan_file_t *file, int ascii_codepage, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_get_number_of_sections "libsigscan_file_t *file, int *number_of_sections, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_get_section "libsigscan_file_t *file, int section_index, libsigscan_section_t **section, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_file_get_section_by_name "libsigscan_file_t *file, const char *name, size_t name_length, libsigscan_section_t **section, libsigscan_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libsigscan_file_open_wide "libsigscan_file_t *file, const wchar_t *filename, int access_flags, libsigscan_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libsigscan_file_open_file_io_handle "libsigscan_file_t *file, libbfio_handle_t *file_io_handle, int access_flags, libsigscan_error_t **error"
.Pp
Section functions
.Ft int
.Fn libsigscan_section_free "libsigscan_section_t **section, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_name_size "libsigscan_section_t *section, size_t *name, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_name "libsigscan_section_t *section, char *name, size_t name_size, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_utf8_name_size "libsigscan_section_t *section, size_t *name, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_utf8_name "libsigscan_section_t *section, uint8_t *name, size_t name_size, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_utf16_name_size "libsigscan_section_t *section, size_t *name, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_utf16_name "libsigscan_section_t *section, uint16_t *name, size_t name_size, libsigscan_error_t **error"
.Ft ssize_t
.Fn libsigscan_section_read_buffer "libsigscan_section_t *section, void *buffer, size_t buffer_size, libsigscan_error_t **error"
.Ft ssize_t
.Fn libsigscan_section_read_buffer_at_offset "libsigscan_section_t *section, void *buffer, size_t buffer_size, off64_t offset, libsigscan_error_t **error"
.Ft off64_t
.Fn libsigscan_section_seek_offset "libsigscan_section_t *section, off64_t offset, int whence, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_offset "libsigscan_section_t *section, off64_t *offset, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_size "libsigscan_section_t *section, size64_t *size, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_start_offset "libsigscan_section_t *section, off64_t *start_offset, libsigscan_error_t **error"
.Ft int
.Fn libsigscan_section_get_virtual_address "libsigscan_section_t *section, uint32_t *virtual_address, libsigscan_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int 
.Fn libsigscan_section_get_data_file_io_handle "libsigscan_section_t *section, libbfio_handle_t **file_io_handle, libsigscan_error_t **error"
.Sh DESCRIPTION
The
.Fn libsigscan_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or \-1 on error, dependent on the return type. For the actual return values refer to libsigscan.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh NOTES
Internally libsigscan uses both ASCII and Unicode (UTF-16 little-endian) strings, as stored in the EXE file. ASCII strings in a EXE file contain an extended ASCII string using the codepage of the system it was created on. The function
.Ar libsigscan_set_ascii_codepage
 allows to set the required codepage for reading and writing. The default codepage is Windows 1252. Unsupported extended characters are replaced to the Unicode replacement character (U+fffd) when reading and the ASCII substitude character (0x1a) when writing.

Libexe uses either the system specific narrow or wide character strings for filenames.
To compile libsigscan with wide character support use
.Ar ./configure --enable-wide-character-type=yes
 or on Windows define
.Ar WINAPI
 and either
.Ar _UNICODE
 or
.Ar UNICODE

To have other code to determine if libsigscan was compiled with wide character support it defines
.Ar LIBSIGSCAN_HAVE_WIDE_CHARACTER_TYPE
 in libsigscan/features.h.

libsigscan allows to be compiled with chained IO support using libbfio.
The libsigscan configure script will automatically detect if a compatible version of libbfio is available.

To have other code to determine if libsigscan was compiled with libbfio support it defines
.Ar LIBSIGSCAN_HAVE_BFIO
 in libsigscan/features.h.

.Sh BUGS
Please report bugs of any kind to <joachim.metz@gmail.com> or on the project website:
https://github.com/libyal/libsigscan/
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2014, Joachim Metz <joachim.metz@gmail.com>.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libsigscan.h include file
