TODO:
* make sure scan buffer is sufficient large for bounded scan
* make sure to handle offsets from end of file

* is there a pratical need to support signature with patterns that contain pattern gaps?
* unbounded scan
  - determine optimal buffer size
  - buffer size vs scan block size?
  - handle boundary matches
* signature table
  - add support for unbounded signatures (LIBSIGSCAN_PATTERN_OFFSET_UNBOUND)
* scanner
  - add support for unbounded signatures
* add memory aligned reads?

Tests:
* sigscan_test_scanner
  - add scan result (signature) identifier check
  - offsets relative from end
  - scan file and file IO handle
  - build scan tree with no signatures, single signature, multiple signatures
* pysigscan_test_scanner
  - fix TODOs
  - offsets relative from end
  - scan file and file object
  - build scan tree with no signatures, single signature, multiple signatures

20150104
* worked on initial version

20150103
* worked on Python bindings
* updated man pages
* worked on scan result

20150102
* worked on initial version
* worked on Python bindings

20150101
* 2015 update
* added msvscpp files
* worked on pattern offset range list

20141231
* worked on initial version
* worked on skip table
* worked on scan state

20141230
* worked on initial version

20141229
* updated dpkg files

20141228
* worked on initial version

20141227
* worked on initial version

20141219
* worked on initial version

20141215
* worked on initial version

20141212
* worked on initial version

20141208
* worked on initial version

20141116
* worked on initial version

20141115
* Initial version based on dfvfs scanner and libexe

